#!/usr/bin/env python3
#
# (c) 2008-2009 Tod D. Romo
#
# Grossfield Lab
# Department of Biochemistry & Biophysics
# University of Rochester Medical School
#
#


import sys
import os
import platform
import re
from subprocess import *
from time import strftime
import shutil
import distutils.sysconfig
import distutils.spawn



# Principal options...
opts = Variables('custom.py')
opts.Add('LOOS', 'Where LOOS is installed', '/opt/LOOS')
opts.Add('LOOS_LIBPATH', 'Path to libraries LOOS was linked with', '/opt/LOOS/lib:/usr/lib64')
opts.Add('LOOS_CPPPATH', 'Path to include files', '/opt/LOOS/include')
opts.Add('LOOS_LIBS', 'Libraries LOOS was linked with', 'netcdf:boost_regex:boost_thread:boost_system:boost_program_options:lapack:f77blas:cblas:atlas')
opts.Add('LOOS_CCFLAGS', 'Compiler flags used to build LOOS', '-DHAS_NETCDF -O3 -NDEBUG -Wall')
opts.Add('LOOS_LINKFLAGS', 'Flags to pass to the linker', '')

env = Environment(ENV = {'PATH' : os.environ['PATH']}, options = opts)
Help(opts.GenerateHelpText(env))
env.Decider('MD5-timestamp')

   
LOOS = env['LOOS']
LOOS_LIBPATH = env['LOOS_LIBPATH']
LOOS_CPPATH = env['LOOS_CPPPATH']
LOOS_LIBS = env['LOOS_LIBS']
LOOS_CCFLAGS = env['LOOS_CCFLAGS']


# Let environment override...
if 'LOOS' in os.environ:
   LOOS = os.environ['LOOS']
   env['LOOS'] = LOOS

if 'LOOS_LIBPATH' in os.environ:
   LOOS_LIBPATH = os.environ['LOOS_LIBPATH']
if 'LOOS_CPPPATH' in os.environ:
   LOOS_CPPPATH = os.environ['LOOS_CPPPATH']
if 'LOOS_LIBS' in os.environ:
   LOOS_LIBS = os.environ['LOOS_LIBS']
if 'LOOS_CCFLAGS' in os.environ:
   LOOS_CCFLAGS = os.environ['LOOS_CCFLAGS']
if 'LOOS_LINKFLAGS' in os.environ:
   LOOS_LINKFLAGS = os.environ['LOOS_LINKFLAGS']


LOOS_LIBPATH = LOOS_LIBPATH.split(':')
LOOS_CPPPATH = LOOS_CPPPATH.split(':')
LOOS_LIBS = LOOS_LIBS.split(':')

env.Replace(CCFLAGS = LOOS_CCFLAGS)
env.Replace(LINKFLAGS = LOOS_LINKFLAGS)
env.Replace(LIBPATH = LOOS_LIBPATH)
env.Replace(CPPPATH = LOOS_CPPPATH)
env.Replace(LIBS = LOOS_LIBS)


env.Prepend(CPPPATH = ['#'])
env.Prepend(LIBPATH = ['#'])
env.Prepend(LIBS = ['loos'])


#####  Modify your build environment below...
# Note: You can chose to Prepend rather than Append

### Add extra flags here...
#env.Append(CCFLAGS=' -DSOMETHING')

### Modify the search paths for include files here
#env.Append(CPPPATH='/usr/local/Foobar')

### Modify the search paths for libraries here
#env.Append(LIBPATH='/usr/local/Foobar/lib')

### Add extra libraries here...
#env.Append(LIBS=['foo', 'bar'])


Export('env')



# Invoke subsidiary sconscripts...

SConscript('SConscript')
