2020-10-05  Alan Grossfield <alan>
	* Fixed bug in gmxdump2pdb, where box units were nm instead of Ang

2020-10-02  Alan Grossfield <alan>
	* Merged in clean-up version of Louis Smith's cluster
	  analysis tool, frame-picker.py
	* Merged in my tool cluster_pops.py

2020-08-27  Alan Grossfield <alan>
	* Fixed bug in system building with non-3-site water models

2020-08-26  Alan Grossfield <alan>
	* Fixed units error in reading charges from Amber prmtop files

2020-08-13  Alan Grossfield <alan>
	* We can read (rectangular) box dimensions from Amber prmtop files
	* OMG and solvate can handle 4 and 5 site water models

2020-08-08  Alan Grossfield <alan>
	* Merged conda-install branch into main: this will be LOOS 3.2
	* fixed missing exception catching in python parseRangeList

2020-08-06  Alan Grossfield <alan>
	* Merged in rna_suites tool and library from Chapin Cavender

2020-08-05  Alan Grossfield <alan>
	* Merged in dihedrals tool from Louis Smith

2020-08-04  Alan Grossfield <alan>
    * membrane_map can now run without aligning

2020-07-31  Alan Grossfield <alan>
	* Merged in esp_mesh tool from Chapin Cavender

2020-07-07  Tod Romo <tromo>
	* Fixed bug in svd where splitting the v-matrix per trajectory wasn't
	  done correctly

2020-06-01 Alan Grossfield <alan>
	* Added warning to aligner to discourage using --append with
	  iterative alignment

2020-04-28 Alan Grossfield <alan>
	* Use symlinks to put python-using packages under loos/pyloos  -- changes
	  imports of Voronoi and OptimalMembraneGenerator

2020-02-28  Alan Grossfield <alan>
	* added new tool set_segids.py

2020-02-13  Alan Grossfield <alan>
	* Merged in new radius of gyration tool rad-gyr from Louis Smith

2019-12-24  Alan Grossfield <alan>
	* Added experimental tSNE feature to cluster-structures.py

2019-12-19  Alan Grossfield <alan>
	* Release 3.1 New build system
	* New Clustering package
	* Bug fix to omg.py and it's handling of internal waters
	* Added rotation options to solvate.py
	* Fixed bug in omg and solvate where salt missed atom names
	* fullhelper.py tool to simplify writing fullhelp messages
	* New tool: packing_score_per_res.py
	* Precision option to RMSD computing tools
	* make_library.py: new tool to make a lipid library
	* add_molecules.py: packmol-like tool to scatter small molecules in a box
	* updates to cluster-structures.py: more output information

2019-02-27  Alan Grossfield <alan>
	* Release of LOOS 3.0.  This is a major change, in that LOOS now
	  requires Python 3.x.

2019-01-21  Alan Grossfield <alan>
	* Merged in a new reweighting framework.  Added a new options class to
	  support it, and implemented it in rdf and xy_rdf as examples.

2018-11-01  Alan Grossfield <alan>
	* Added --postcenter-xy and postcenter-z to merge-traj.  Updated fullhelp
	  to include a better explanation of when you might need these methods.

2018-10-26  Alan Grossfield <alan>

	* Added new option --postcenter to merge_traj, to improve reimaging in
	  challenging cases.

2018-10-23  Alan Grossfield <alan>
    * Further change to order_params -- I decided the previous version could
      produce odd answers if there are a small number of chains selected.

2018-10-18  Alan Grossfield <alan>

	* Major change in order_params. A previous change to take the absolute value
	  of the Legendre polynomial resulted in incorrect values.  I still think
	  the absolute value is physically correct, but we've moved it to after
	  averaging within a given snapshot.  The results are now more consistent
	  with what other packages generate.

2018-10-15  Tod Romo  <tromo>

	* Changed src/timers.hpp to be src/loos_timers.hpp in order to avoid filename conflicts

2018-05-17 <tromo>
  * Changed PSF code to accept hybrid-36 encoding for atomid's and resid's

2018-05-08 <tromo>
	* Fixed potential bug in gmxdump2pdb.pl when using newer PERLs (missing an escaped
	  closing brace that did not appear to affect the program...)
	* Fixed bug in subsetter that allowed zealous reimaging mode without a centering selection.

2018-02-02 <alan>
	* Bugfix in order_params to allow selecting chain 1

2018-01-10 <alan>
	* Added new tool (distance_prob)

2017-11-02 <tromo>
	* Changed SConsctruct and support scripts to make print a function (required by scons-3.0.0)

2017-09-21 <alan>
	* added new tool all_contacts.py to PyLOOS, to compute probabilities
	  for residue-residue contacts

2017-09-07 <alan>
	* added option to ignore neighboring residues to native_contacts

2017-08-31 <alan>
	* Added --per-residue option to native_contacts

2017-08-09 <alan>
	* Added kineticEnergy() method to AtomicGroup

2017-08-09 <alan>
	* Added NAMDBin.py, to read NAMD binary format.

2017-08-02 <alan>
	* Added the ability to manually select the water to crossing-waters tool.
	  Based on a bug report from Violeta Casamayor.

2017-07-18 <tromo>
	* Added support for indexing relative to the end of the trajectory in
	  frame2pdb (using negative frame numbers)

2017-05-29  <tromo>

	* Fixed bug in rmsd_to_average.py

2017-04-28	<tromo>
	* Fixed bug in PDB reader affecting parsing of CONECT records and hybrid36 atomids
	* Changed extreme reimaging mode in subsetter to use middle-residue for repositioning
	  rather than the first atom.

2017-04-02    <tromo>

	* Fixed bug in backbone selection causing terminal nucleic acids to be skipped

2017-03-21	<tromo>
	* Added support for gro files that are missing velocities.

2017-01-23    <alan@membrane>
    * Added new tool all_contacts.py to PyLOOS package

2016-12-16    <alan@membrane>
	* Added new program helix_axes.py to PyLOOS package

2016-12-05    <alan@membrane>

	* Add 4 skeleton programs to PyLOOS

2016-11-30    <alan@membrane>

	* order_params averages the absolute value of the 2nd Legendre polynomial,
	  instead of the actual value.

2016-11-17    <tromo@hill>

	* Fixed bug in rmsds and multi-rmsds that caused the memory usage warning to not happen.

2016-11-14    <tromo>

	* Fixed bug in bug in AmberNetcdf where the reader would always try to read velocities
	and fail if not present.
	* Changed AtomicGroup::findBonds() to be optionally PBC aware (with Alan's help)

2016-11-12    <tromo@hill>

	* Fixed bug in AmberNetcdf where the Trajectory iterator would show one more
	frame than actual.

2016-11-11    <tromo@hill.urmc-sh.rochester.edu>

	* Added support for velocities in Atom.
	* Added support for velocities in Trajectory.  Formats that natively store velocities will use those,
	otherwise LOOS will assume that the coords are actually velocities.
	* Changed Trajectory::coords() to be const

2016-10-28    <tromo@hill>

	* Added MultiTrajectory class: a Trajectory that can contain other
	Trajectory objects.  Each sub-trajectory can have its own skip and
	stride.
	* Added MultiTrajOptions for handling multi-trajectories on the command
	line.  This must be the last option included.
	* Changed Trajectory to be copyable.  Now saves iterator state internally.
	* Added Trajectory::filename()
	* Removed StreamWrapper from Trajectory.  StreamWrapper will likely go away
	in a future release.
	* Changed the frame range parser to use BOOST::Spirit.  This includes support
	for using an empty range end to specify the end of a file, e.g. 10:2: means
	take every other frame, starting at frame 10, until the end of the file.
	* Changed subsetter and svd to use the new MultiTrajectory
	* Added multi-rmsds tool to compute a pair-wise RMSD matrix for an arbitrary
	number of trajectories.

2016-10-13    <alan@membrane>

	* Added option to native_contacts to supply a reference structure


2016-10-05    <tromo@hill>

	* Added --reimage=zealous to subsetter
	* Added proper support for atom inequality in PyLOOS (uses metadata only)

2016-09-13    <tromo@hill>

	* Added --verify option to trajinfo to suppress frame count verification when using
	the brief output.

2016-09-08    <tromo@hill>

	* Fixed bug affecting water density tools and the radius filter.  Too few waters
	were actually being selected.

2016-09-02    <tromo@hill>

	* Changed DCD to handle trajectories with 0 frame count in the header (no longer
	  requires running fixdcd first)

2016-08-26    <tromo@hill>

	* Added option to remove bonds with model-select
	* Changed dibmops to use 0 for avg in bins with no data rather than -1

2016-08-17    <tromo@hill>

	* Added support for using ranges of frames and skip in rdf, atomic-rdf, and xy_rdf
	* Fixed bug in water-autocorrel

2016-08-03    <tromo@hill>

	* Fixed bug in effsize.pl affecting some Unix distros
	* Fixed bug affecting python alignment results (when converting the vector of xforms to
	a Python list).
	* Fixed bug in rmsd_to_average.py causing it to break at the end when showing overall average

2016-07-21    <alan@membrane>

	* Added new tool lipid_survival to compute lifetime of lipids at surface
	  of protein

2016-07-11    <alan@membrane>

	* Added periodicity support to native_contacts
	* Fixed (tromo) bug in doxygen handling that cause docs to be rebuilt excessively

2016-07-08    <tromo@hill>

	* Released loos-2.3.2
	* Added support for unpacking prebuilt docs tarball

2016-07-01    <tromo@hill>

	* Added support for manually setting molecule name to segid mapping in gmxdump2pdb tool

2016-06-28    <tromo@hill>

	* Changed documentation so it will be automatically built in github clones
	* Fixed bug in amber parmtop reader that affected Ubuntu 16
	* Added functions in utils_structural.cpp to PyLOOS

2016-06-24  Tod Romo  <tromo@hill>

	* Fixed bug in density-dist that prevented the number calculation from working

2016-06-22  Tod Romo  <tromo@hill>

	* Fixed bug in PyLOOS that made XTCWriter unavailable

2016-06-15  Tod Romo  <tromo@hill>

	* Fixed bug in aligner where xyonly was ignored if using a reference structure to align to
	* Fixed bug in membrane_map where specifying a reference structure would not actually align with it

2016-06-13  Tod Romo  <tromo@hill>

	* Added verap tool for quick vertical area profiles

2016-06-07  Tod Romo  <tromo@hill>

	* Changed how LOOS is organized (slightly).  The core library code
	now resides in the "src" directory.  The built shared library is
	still stored at the top-level LOOS directory.

2016-06-03  Tod Romo  <tromo@hill>

	* Added HSD, HSE, and HSP to recognized residues for backbone selector

2016-06-03  Alan Grossfield <alan@membrane.urmc.rochester.edu>

	* Added new tool cylindrical-thickness

2016-06-02  Alan Grossfield <alan@membrane.urmc.rochester.edu>

	* Fixed bug in cylindrical-density -- accidentally left options
	  hardwired.

2016-04-19  Alan Grossfield <alan@membrane.urmc.rochester.edu>

	* Added ability to write GRO files.  Added Gromacs class to pyloos

2016-04-15  Tod Romo  <tromo@Gorgoneion.local>

	* Fixed bug in fullhelp for serialize-selection and default output
	when using pdbout

2016-03-24    <tromo@hill.urmc-sh.rochester.edu>

	* Added --positive and --negative flags to enmovie controlling which direction
	motion is depicted

2016-03-11    <alan_grossfield@.urmc.rochester.edu>

	* Added new tool inside_helices.py to Packages/PyLOOS

2016-01-11    <tromo@hill>
	* Released loos-2.3.1

2016-01-08    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in center-molecule affecting --center_xy

2016-01-07    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in membrane_map causing alignments to be incorrect (affected height calculation)

2015-11-20    <tromo@hill.urmc-sh.rochester.edu>

	* Released loos-2.3.0

2015-11-11    <alan@membrane.urmc.rochester.edu>

	* Added lipid_lifetime.py tool to the Voronoi package

2015-10-23    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug affecting reading Charmm CRD files

2015-10-12    <tromo@hill.urmc-sh.rochester.edu>

	* Reorganized superposition and iterative alignment code into
	alignment module.  AtomicGroup methods call these functions now.
	* Reorganized pyloos iterative alignment routines:
	iterativeAlignment() will align anything that iterates over
	AtomicGroups (e.g. pyloos.Trajectory()), while
	iterativeAlignTrajectory() is a front-end to the standard LOOS functions.
	* Added new tool cylindrical-density.py to PyLOOS package (Alan)

2015-09-30    <tromo@hill.urmc-sh.rochester.edu>

	* Change RMSD to optionally use multiple threads
	* Added boost threads as a build requirement

2015-09-28    <tromo@hill.urmc-sh.rochester.edu>

	* Changed AtomicGroup::superposition() to use the faster dgesvj().
	Note: this is an iterative method that may not converge.  In
	practice, the residual will be small if it does not.  LOOS will
	print out a warning in such cases.  If you find many warnings
	being issued, contact the LOOS developers.
	* Changed the rmsds tool to use a much faster algorithm (up to an
	order of magnitude faster).  There is no option to disable caching
	now--if the cached subsets do not fit in memory, you will want to
	subsample the trajectories.

2015-09-14    <tromo@hill.urmc-sh.rochester.edu>

	* Changed pyloos organization
	* Added numpy support in PyLOOS
	* Added ensembles and SVD support in PyLOOS

2015-08-27    <tromo@hill.urmc-sh.rochester.edu>

	* Added k-means clustering PyLOOS program (cluster-structures.py)
	* Added AtomicGroup::getCoords() and AtomicGroup::setCoords() for numpy


2015-07-23    <tromo@hill.urmc-sh.rochester.edu>

	* Changed trajinfo to handle read errors and only use first set of valid frames
	* Changed trajinfo to ALWAYS scan trajectory frames
	* Added [PYLOOS] iterativeAlignment functions that will return a
	Python tuple (list of transforms, final rmsd, # of iterations)
	* Deprecated [PYLOOS] iterativeAlignmentPy() functions
	* Changed [PYLOOS] AtomicGroup::splitByMolecule() to return a
	Python list of AtomicGroups rather than an AtomicGroupVector
	* Changed [PYLOOS] AtomicGroup::splitByUniqueSegid() to return a
	Python list of AtomicGroups rather than an AtomicGroupVector
	* Changed [PYLOOS] AtomicGroup::splitByResidue() to return a
	Python list of AtomicGroups rather than an AtomicGroupVector


2015-07-21    <alan_grossfield@urmc.rochester.edu>
	* Fixed bug in handling of extended format charmm coordinates, including
	  actually parsing the "EXT" flag

2015-06-30    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in xy_rdf where --sel1-spans, --sel2-spans, and --reselect were ignored


2015-06-22    <tromo@hill.urmc-sh.rochester.edu>

	* Added IndexSelector to pick atoms based on their index within the model
	file (not the same as atom id)
	* Added "index" keyword to selection language
	* Changed integers in selection language to long ints (to avoid overflow problems)

2015-05-28    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed handling of DEBUG in setup scripts
	* Changed order_params tool to support ranges for what frames to use

2015-04-22    <tromo@membrane.urmc.rochester.edu>

	* Released 2.2.5


2015-04-10    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in operator overloadings for GCoords in PyLOOS
	* Changed options and behavior of porcupine and enmovie.  See their
	fullhelp for more information.
	* Changed default selection for ENM tools to alpha-carbons rather than all.
	* Changed default selection for SVD to alpha-carbons
	* Added -S as a spring function option shortcut for ENM tools

2015-03-30    <tromo@hill.urmc-sh.rochester.edu>

	* Added ".netcdf" as a recognized file suffix for Amber NetCDF
	Trajectories.
	* Fixed help and fullhelp in subsetter

2015-03-02    <tromo@hill.urmc-sh.rochester.edu>

	* Added --sort option to merge-traj
	* Changed the default sort regex for subsetter and merge-traj to
	sort on the *LAST* number in the filename

2015-02-25    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in fcontacts resulting in NaN's in output if there
	are no target atoms near the probe.
	* Added NAMD tag (optional) to PSF files created by gmxdump2pdb

2015-02-19    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in merge-traj that required downsampled dcd filename to operate
	* Added support for sorting trajectory files numerically (as subsetter does)

2015-02-13    <alan@membrane.urmc.rochester.edu>

	* Added new option --ref-structure to membrane_map, to facilitate combining
	  results from multiple trajectories

2015-02-06    <tromo@hill.urmc-sh.rochester.edu
	* released 2.2.4

2015-01-27    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed reading of Amber prmtop files that use mixed case for
	format specs
	* Fixed handling of non-netCDF Amber files when built with NetCDF support

2015-01-26    <tromo@hill.urmc-sh.rochester.edu>

	* Released 2.2.3

2015-01-23    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bugs affecting functins in atoms, coords, and matrix44 that return
		a ref in PyLOOS.  These are now const refs and should no longer be wrapped
		by swig (instead, the value will be returned)
	* Added improved error handling in the build system

2015-01-17    <tromo@hill.urmc-sh.rochester.edu>

	* Released 2.2.2

2015-01-16  Tod Romo  <tromo@Gorgoneion>

	* Fixed bug in reading amber parmtop files
	* Fixed bug when building with latest MacOS and XCode

2015-01-13    <tromo@hill.urmc-sh.rochester.edu>

	* Released loos 2.2.1

2015-01-12    <tromo@hill.urmc-sh.rochester.edu>

	* Changed mops and dibmops to split using connectivity (if available)
	or force splitting by residue (--residue=1)

2015-01-09    <tromo@hill.urmc-sh.rochester.edu>

	* Changed the build system
	* Changed mops to optionally write out a time-series of molecular order parameters

2015-01-07    <tromo@hill.urmc-sh.rochester.edu>

	* Removed dcd_utils.cpp and gridify()

2015-01-06    <alan@membrane.urmc.rochester.edu>

	* Added --upper-only and --lower-only options to membrane_map to
	easily allow the user to specify one leaflet to look at

2014-12-24    <tromo@hill.urmc-sh.rochester.edu>

	* Released loos 2.2.0

2014-12-22    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in smooth-traj where a half-window's worth of frames
	at the end of the trajectory would be excluded.
	* Added --clip flag to smooth-traj to control whether output
	trajectory has clipped ends, or is the same size as the input
	trajectory.


2014-12-18    <tromo@hill.urmc-sh.rochester.edu>

	* Added AtomicGroup::contactWith() which returns true or false if
	two groups have a pair of atoms within a threshold distance

2014-12-16    <tromo@hill.urmc-sh.rochester.edu>

	* Changed aligner, smooth-traj, reimage-by-molecule, and
	serialize-selection to allow selecting the output trajectory
	format.

2014-12-10    <alan@membrane.urmc.rochester.edu>

	* Added solvate.py to OptimalMembraneGenerator, to build
	protein in water systems without lipids
	* Added model-meta-stats to give on overview of metadata in a model

2014-12-09    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in aligner that caused incorrect output when using subset of
	the trajectory (i.e. giving a stride, a skip, or some ranges on the
	command line)
	* Changed entire exception framework.  Almost all exceptions thrown
	by LOOS now derive from LOOSError.  Most exceptions are now global
	as well.
	* Changed how Swig interface is generated (from the LOOS header
	files directly)
	* Removed char* based constructors in favor of const string&
	* Added filename tracking within I/O classes for better error messages
	* Changed DCD::readHeader() to be private
	* Changed selectAtoms() to ONLY throw in the event of an error in parsing
	the selection string.  If no atoms are selected, then an empty AtomicGroup
	is returned.
	* Changed AtomicGroup::groupFromID() so that missing atoms are ignored
	rather than cause an exception to be thrown


2014-11-20    <tromo@hill.urmc-sh.rochester.edu>

	* Deprecated gridify() in dcd_utils.cpp

2014-10-21    <tromo@hill.urmc-sh.rochester.edu>

	* Changed PDB reader so missing fields (to the right of
	coordinates) will be tolerated and default values used.
	See new functions to test for presence of missing data.
	A one-time warning will be printed if missing fields are
	found.

2014-10-15    <alan@membrane.urmc.rochester.edu>

	* Add OptimalMembraneGenerator to Packages

2014-08-26    <tromo@hill.urmc-sh.rochester.edu>

	* Changed BackboneSelector to now include backbone hydrogens

2014-08-22    <tromo@hill.urmc-sh.rochester.edu>

	* Changed BackboneSelector to select backbone atoms for protein
	and nucleic acids.  Will only work for known residue names and
	atom names (see Selector.cpp for the list)
	* Changed backbone keyword action to be a wrapper around the
	BackboneSelector

2014-08-17    <tromo@hill.urmc-sh.rochester.edu>

	* Added backbone keyword to selection language (selects protein backbone)

2014-08-11  Tod Romo  <tromo@gorgoneion>

	* Changed DCDWriter::framesWritten() to return an unsigned int
	* Added TrajectoryWriter base class to provide a simple interface
	to writing trajectories
	* Added XTCWriter class for writing GROMACS XTC files (single
	precision only...based heavily on the xdrfile library provided by
	GROMACS)
	* Changed DCDWriter to derive from TrajectoryWriter
	* Added createOutputTrajectory() factory function to determine
	output trajectory format and return a pTrajectoryWriter (boost
	shared pointer to a TrajectoryWriter object).
	* Added a static class function to all trajectories and systems
	(e.g. pPDB PDB::create(const string &fname)).
	* Changed how all of the createXXXX() factory functions work...
	They use a table binding filename extension to the appropriate
	object create() function.
	* Added Trajectory::description() to return a string describing
	the trajectory format.
	* Changed trajinfo to report the trajectory file's format
	* Changed subsetter and mergetraj to use TrajectoryWriter.
	* Added splitFilename() utility function to break a filename into
	the basename and a dotted suffix.
	* Added OutputTrajectoryOptions class.

2014-07-31    <alan@membrane.urmc.rochster.edu>
    * Added support for periodic boxes in Tinker XYZ and arc files


2014-07-30    <tromo@hill.urmc-sh.rochester.edu>

	* Added support for getting the step and time for the currently
	read XTC frame.
	* Added support for calculating the timestep (time per step) from
	an XTC trajectory

2014-07-18    <tromo@hill.urmc-sh.rochester.edu>

	* Released 2.1.3

2014-07-17    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in rebond that created bonds from subset atoms to themselves

2014-07-16    <tromo@hill.urmc-sh.rochester.edu>

	* Changed chist tool to operate in either cumulative or windowed
	mode...

2014-06-18    <alan@membrane.urmc.rochester.edu>
	* in merge-traj, added support for separate selections to recenter
	in xy and z


2014-06-16    <tromo@hill.urmc-sh.rochester.edu>

	* Removed center-model (this had been deprecated back in 2011)

2014-06-11    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in rmsds when using 2 trajectories causing progress
	updates to have absurdly long run-time estimates

2014-06-05    <tromo@hill.urmc-sh.rochester.edu>

	* Added note about testing with Manjaro and Slackware

2014-06-03    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in in TRR/XDR affecting double precision data (found by Pin-Kuang Lai)

2014-06-02    <alan@membrane.urmc.rochester.edu>
	* Added number density option to density-dist

2014-05-06    <alan@membrane.urmc.rochester.edu>
	* Added new package Voronoi.  Requires numpy and scipy in addition
	to LOOS.
2014-04-18    <tromo@hill.urmc-sh.rochester.edu>

	* Added "core" water filter for DensityTools.  An alternative
	method for finding the protein axis.  See protein_tilt.py or the
	Doxygen docs for WaterFilterCore for more details.

2014-04-14    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed build issue when specifying ATLAS_LIBS

2014-04-10    <tromo@hill.urmc-sh.rochester.edu>

	* Added --threshold=f to interdist that will segment the output
	based on the given cutoff/threshold

2014-03-13    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed help info for dcdinfo
	* Added cumulative histogram tool (chist) in Convergence package
	* Changed XForm::rotate(const GCoord&, const greal)
	to throw an invalid_argument exception if the
	rotation axis does not have some minimal length.

2014-03-06    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bad HTML tag in dox

2014-03-05    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed crash in phasepdb caused by default chunk size setting

2014-02-25    <tromo@hill.urmc-sh.rochester.edu>

	* Added mops and dibmops for molecular order parameters and
	distance-based molecular order parameters respectively

2014-02-14    <tromo@hill.urmc-sh.rochester.edu>

	* Released version 2.1.2

2014-02-13    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug where PyTraj was not installed
	* Fixed bug affecting AmberTraj::updateGroupCoords() [mdcrd files]
	resulting in a segfault.

2014-02-07    <alan@membrane.urmc.rochester.edu>

	* Added new feature to xy_rdf (--reselect) to handle the case where
	  molecules move back and forth between leaflets

2014-01-31    <tromo@hill.urmc-sh.rochester.edu>

	* Released version 2.1.1

2014-01-29    <tromo@hill.urmc-sh.rochester.edu>

	* Added support for OpenSUSE 13 and Fedora 20

2014-01-23    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in drifter that prevented it from running
	* Fixed bug in parseStringAs<> that can affect shortened fields
	at the end of a line causing it to return a default value.

2014-01-21    <alan@membrane.urmc.rochester.edu>

	* Fixed a bug in protein_tilt.py, where the average vector wasn't reset
	upon successive frames in the trajectory.
	* Fixed bug in rmsds tool where the average RMSD reported
	was incorrect (sligthly under when using one trajectory,
	with large error when using two trajectories) [Tod]

2014-01-10  Tod Romo  <tromo@gorgoneion>

	* Changed [PyLOOS] GCoord, AtomicGroup, TimeSeries, and Matrix44
	to be iterable
	* Added [PyLOOS] PyTraj and PyAlignedTraj for Python iteration through a
	Trajectory

2014-01-08  Alan Grossfield <alan@membrane.urmc.rochester.edu>

    * Added new tool packing_score, to quantify the packing between
	  to selections over the course of a trajectory

2013-11-04  Tod Romo  <tromo@ubuntu-mac-12>

	* Added MacOS 10.9 (Mavericks) compatibility
	* Added support for writing truncated SVD in big-svd
	* Changed rmsds to optionally cache the trajectory for improved
	performance
	* Changed build system (refactoring and various improvements, see
	INSTALL or Doxygen docs for more information)
	* Deprecated tests build target

2013-10-18    <alan@membrane.urmc.rochester.edu>
	* Added new tool membrane_map, which computes the 2D distribution of
	a variety of physical properties around a membrane protein
	* Fixed bug in svd tool where basic options (such as -v1) would
	fail with an options error.

2013-10-17    <tromo@hill.urmc-sh.rochester.edu>

	* Changed Matrix operator[] to only check for out of bounds index
	when debugging (i.e. -DDEBUG)

2013-10-15    <tromo@hill.urmc-sh.rochester.edu>

	* Added BasicSplitBy option to the options framework.  Use the
	BasicSplitBy::split() member function to split an AtomicGroup
	based on a user-specified method.
2013-10-11    <tromo@hill.urmc-sh.rochester.edu>

	* Added Math::eigenDecomp() that calculates the eigenpairs for
	the passed DoubleMatrix (using DSYEV).
	* Added gnm-traj and anmo-traj tools for analyzing trajectories
	using elastic network models.

2013-10-08    <tromo@hill.urmc-sh.rochester.edu>

	* Changed how atomid's are handled in LOOS.  Previously in LOOS,
	atomid's had special meaning.  Not only should they be unique, but
	they also identify which "slot" in a trajectory frame that a
	specific atom was located.  This meant that if a model's atomid's
	didn't begin at 1 were not contiguous, then bad things could
	happen.  Now, LOOS assigns and atom "index" to every atom as it is
	being read in by the appropriate model format class (e.g. PDB,
	Amber, etc).  This index tells LOOS which slot to use with a
	trajectory, rather than the atomid.  In general, this should just
	work.  For more information, see the Doxygen documentation for
	Trajectory or the LOOS FAQ.
	* Changed all Trajectory-derived updateGroupCoords() to honor the
	atom index information.  This affects primarily the PDB-based
	trajectory classes which used to ignore atom metadata if the
	passed AtomicGroup was the same size as the trajectory frame.
	* Changed updateGroupCoords() to use NVI idiom.  Now calls
	updateGroupCoordsImpl() in the derived classes.

2013-10-01    <tromo@hill.urmc-sh.rochester.edu>

	* Added smooth-traj tool for smoothing trajectories

2013-09-13  Tod Romo  <tromo@Gorgoneion.local>

	* Released 2.0.6

2013-08-26    <tromo@hill.urmc-sh.rochester.edu>

	* Changed default exponential spring constant to -0.5

2013-08-22    <alan_grossfield@membrane.urmc.rochester.edu>
    * Added new flag to rdf to allow the two selections to be split using
	  different methods.

2013-08-20    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug with XTC trajectories when the system contains too
	few atoms (<= 9).  Gromacs does not compress the coordinates, but
	LOOS expected all system sizes to have compression.
	* Changed transition_contacts to add a --smoothed-transition
	option to use a tanh() function to effectively smooth the contacts
	matrix when a contact is near the cutoff.  This is now the default
	behavior.  (Nick)

2013-08-15    <tromo@hill.urmc-sh.rochester.edu>

	* Changed installation to now include python scripts if pyloos is
	being built.
	* Added .nc and .crd as Amber trajectory extensions.  Note that
	.crd for a structure is still interpreted as a CHARMM coordinate
	file.

2013-08-12    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in serialize-selection where the output molecules were
	interleaved rather than each chunk of T-frames consisting of a
	single molecule (e.g. it would have been mol 1, mol 2, mol 1, mol
	2 instead of mol 1, mol 1, mol 2, mol 2)
	* Added --fullhelp output to phase-pdb
	* Fixed bug in phase-pdb where a duplicate (and incorrect) set of
	bonds could be added when using --chunk and --rows options

2013-08-01    <alan_grossfield@membrane.urmc.rochester.edu>

    * Added a new tool to Packages/PyLOOS: protein_tilt.py computes the time
	  series of the tilt angle for a transmembrane protein by averaging the
	  tilt vectors of individual selects (e.g. individual helices)

2013-07-26    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed hierarchy so that it now catches bad input and generates a
	useful error message rather than segfaulting...
	* Fixed multiple tools to more gracefully handle problems when
	opening files.

2013-07-23    <tromo@hill.urmc-sh.rochester.edu>

	* Changed coverlap tool to internally use double-precision for
	eigenpair matrices.  This resolves a fringe-case where coverlap
	would fail with a conversion error when using eigenpairs from the
	ENM suite.

2013-07-23  Tod Romo  <tromo@Gorgoneion.local>

	* Fixed gmxdump2pdb.pl so that it can handle cases where there are
	more topology segments than molecular segments (as can happen with
	bilayer systems)

2013-07-19    <tromo@hill.urmc-sh.rochester.edu>

	* Added link to tutorial on LOOS in documentation

2013-07-03    <alan@membrane.urmc.rochester.edu>

	* Added change to cross-dist.  Disambiguate sign of PCA vectors
	  by checking against end-to-end vector.  Code (and idea) courtesy of
	  Jerome Henin.

	* Fixed bug in setup.csh (user package directory was mispelled).

2013-07-01    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed gmxdump2pdb.pl to NOT use hybrid-36 encoding for the
	PSF file.

2013-06-25    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed potential bug in DCD reader nstep was used internally in
	place of nfile.
	* Fixed bug when instantiating DCD files with nfile==0 so it
	doesn't immediately throw an error.
	* Added fixdcd tool to update a DCD header (in-place) with the
	correct # of frames.

2013-06-19    <tromo@hill.urmc-sh.rochester.edu>

	* Released 2.0.5


2013-06-18    <tromo@hill.urmc-sh.rochester.edu>

	* Changed rmsd2ref so that it no longer caches trajectory frames

2013-05-29    <tromo@hill.urmc-sh.rochester.edu>

	* Added --xyonly option to aligner so that alignment (rotations)
	only occur in the x,y plane.  Note that all systems are translated
	so their centroids are coincident, so there may be a
	Z-translation.
	* Changed AtomicGroup::superposition() to not throw if the
	alignment matrix is singular.  Instead, aligner will warn if too few
	atoms are selected instead.
	* Changed setup scripts to prepend paths rather than append
	* Added transition_contacts tool from N. Leioatts

2013-05-22  Tod Romo  <tromo@Gorgoneion.local>

	* Changed renum-pdb so that connectivity is preserved

2013-05-17  Tod Romo  <tromo@gorgoneion>

	* Changed timeAsString() to accept an optional precision parameter
	for the seconds field.

2013-05-07    <alan@membrane.urmc.rochester.edu>
	* Updated native_contacts tool.  Fixed an off-by-one bug that
	caused the last residue in the selection to be handled wrong. Switched
	to using the standard program options, so now the selection defaults to
	name == "CA", and is prefixed by --sel.  Added new option to output the
	timeseries of individual contacts to a separate file.  Added new option to
	exclude the backbone atoms.

2013-05-01    <tromo@hill.urmc-sh.rochester.edu>

	* Added serialize-selection tool.  Given a trajectory with T
	frames and a selection consisting of N molecules (by connectivity
	of segid), this tool will create a new trajectory that consists of
	only one molecule but is N*T frames long.  Each chunk of T-frames
	consists of one of the molecules.


2013-04-25    <tromo@hill.urmc-sh.rochester.edu>

	* Changed how some versions of averageStructure() and
	iterativeAlignment() work.  The versions that take an AtomicGroup
	and a pTraj as arguments no longer cache the trajectory in
	memory.  Instead, they will read through the trajectory as
	necessary, only operating on a frame at a time.  In the case of
	aligning, this may involve multiple reads through the trajectory.

2013-04-18    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed bug in gmxdump2pdb.pl that affected systems with 100,000
	atoms or more.

2013-04-14  Tod Romo  <tromo@Gorgoneion.local>

	* Added fcontacts tool that should, in most cases, supercede the
	contact-time tool.  It calculates the contacts made
	between a probe and a set of target selections as a fraction of
	all contacts with the probe.
	* Added LOOS exceptions to PyLOOS
	* Fixed selectAtoms() in PyLOOS to throw LOOS exceptions (i.e. it
	will no longer crash python)

2013-04-12 <tromo@hill.urmc-sh.rochester.edu>

	* Added HBondDetector class: given a triple of atoms, will
	efficiently apply angle and distance criteria (Alan)
	* Changed StreamWrapper to use an istream internally rather than
	iostream.
	* Changed Trajectory (& derived classes) to take an istream in
	constructor rather than an ifstream
	* Changed all structure classes (i.e. pdb, amber, tinkerxyz, etc)
	to take an istream in the constructor rather than an ifstream
	* Changed XDR class, refactoring it into XDRReader (which takes an
	istream) and XDRWriter (which takes an ostream)

2013-04-03 <tromo@hill.urmc-sh.rochester.edu>
	* Released 2.0.4

2013-04-01    <tromo@hill.urmc-sh.rochester.edu>

	* Changed build procedure(s).  To build pyloos, use "scons
	pyloos=1".  PyLOOS can now be installed with "scons pyloos=1
	install".  Only PyLOOS can be built by using "scons pyloos_only".

2013-03-28    <tromo@hill.urmc-sh.rochester.edu>

	* Changed PSF reader to NOT try to use hybrid-36 encoding.  This
	affected large systems that should have been readable but
	weren't.
	* Added --bonds option to frame2pdb and convert2pdb that controls
	whether CONECT records are written.

2013-03-27    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed performance issue with writing PDB files containing bonds
	and lots of atoms

2013-03-22    <tromo@hill.urmc-sh.rochester.edu>

	* Added --assign option to ramachandran for printing out a rough
	secondary structure assignment

2013-03-21    <tromo@hill.urmc-sh.rochester.edu>

	* Fixed error in fullhelp for subsetter tool (cannot use multiple
	--range options, must use a  comma-separated list instead)

2013-03-14  Tod Romo  <tromo@Gorgoneion.local>

	* Fixed bug in OptionsFramework with MacOS and Boost 1.52+.

2013-03-12    <tromo@hill.urmc-sh.rochester.edu>

	* Added a --brief option to area_per_lipid
	* Fixed bug in area_per_lipid where the --skip option was ignored
	when generating the area timeseries

2013-02-16  Tod Romo  <tromo@isteno>
	* Added "chainid" keyword to selection language
	* Fixed issues associated with regenerating the parser (bison/flex version problems)
	* Added support for python in MacOS

2013-02-07  Tod Romo  <tromo@gorgoneion>

	* Fixed build issue with MacOS 10.8 and BOOST 1.53.0 involving
	MatrixStorage.hpp

2013-02-01    <tromo@spade.biophysics.rochester.edu>

	* Released 2.0.3

2013-01-30    <tromo@spade.biophysics.rochester.edu>

	* Added Simplex::maximumIterations() for returning the max [Dejun]
	* Added Simplex::numberOfIterations() to return internal count of
	function evaluations. [Dejun]
	* Fixed incomplete help messages
	* Changed ramachandran to not use tabs in output
	* Fixed warnings in builds under Fedora
	* Fixed bug in AtomicGroup::AtomicGroup(const int n) found by
	H. Elgabarty.

2012-12-14    <tromo@spade.biophysics.rochester.edu>

	* Fixed errors in help messages
	* Fixed build for OpenSUSE and Ubuntu 8.04 LTS
	* Added support for NetCDF formatted Amber Trajectories
	* Fixed bug in PSF reader when reading a file that came from windows
	* Changed gridgauss to permit more control over the smoothing kernel
	* Added gridautoscale to normalize grid densities such that bulk
	water is 1.0 (for membrane systems only)

2012-10-24    <tromo@spade.biophysics.rochester.edu>

	* Changed water-hist to now include the water-filter bounds when
	calculating the grid size.
	* Fixed errors in fullhelp for water-hist

2012-09-06    <tromo@spade.biophysics.rochester.edu>

	* Added LineReader base class for reading lines from a file.  Handles
	removal of comments and tracking of line numbers for error
	messages.  Derive from this class to alter behavior
	(e.g. comments)
	* Changed Amber prmtop reader to use the LineReader class
	* Changed readVector<T>() to also use a LineReader object (either
	passed or internally if using the old interface).  Can now also
	take a string that gives the name of the file to read from.
	* Added AtomicGroup::atomOrderMapFrom() to map the order of atoms
	in one group into another.  This is for "edge" cases such as when
	psfgen reorders the atoms within a residue.  Note that the groups
	must match in that they must have the same number of atoms with
	the same names, and the residues must be in the same sequence.
	The search for matching atoms *only* occurs within a residue.
	* Added AtomicGroup::copyMappedCoordinatesFrom().  This will find
	the mapping of atoms from the other group into the current one and
	use it to copy the other group's coordinates over.  Note that if
	the atoms are already in the same order, then
	AtomicGroup::copyCoordinatesFrom() will be faster.

2012-08-31    <tromo@spade.biophysics.rochester.edu>

	* Deprecated UniqueStrings class
	* Changed AtomicGroup::splitByUniqueSegid() so that the
	AtomicGroup's returned are in the order the segids appear in the
	source AtomicGroup
	* Changed Amber prmtop reader so the format lines used for data is
	no longer hard-coded, but read from the prmtop file itself.  Only
	simple formats are supported.
	* Fixed silly bug in CHARMM crd reader where the segid wasn't set (Alan)

2012-08-30    <tromo@spade.biophysics.rochester.edu>

	* Added better error messages for parse errors in Amber prmtop
	files.
	* Added Amber::title() to return the title string contained within
	an Amber prmtop file
	* Added support for AMOEBA variant of Amber prmtop files (this
	includes supporting varying numbers of pointers)


2012-08-21    <tromo@spade.biophysics.rochester.edu>

	* RELEASED version 2.0.2

2012-08-08    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in PDB reader where bonds (via CONECT records) were
	not explicitly made symmetrical.
	* Fixed a side-effect in the PDB writer where the underlying PDB
	would be sorted after writing.
	* Changed PDB writer to only write out a-directional bonds.  The
	symmetrical bonds are not written (i.e. A->B will be written into
	a CONECT record, but not B->A)
	* Changed model-select to now require the '--selection' or '-s'
	option to specify a subset selection.  Added '--splitby mode'
	where mode is one of residue, segid, molecule, or name.  This
	causes the subset to be split with the appropriate method and each
	group is then written out.  This is useful for diagnosing
	splitting and connectivity issues.

2012-08-06   <tromo@spade.biophysics.rochester.edu>

	* RELEASED version 2.0.1

2012-08-01  Tod Romo  <tromo@Gorgoneion.local>

	* Changed MacOS build to use the Accelerate framework rather than
	vecLib directly (which is now deprecated under 10.8)

2012-07-31    <tromo@spade.biophysics.rochester.edu>

	* Added gmxdump2pdb.pl, a PERL program to take the output of
	gmxdump and create a PDB (and a minimal PSF) representing the
	system and its connectivity.

	* Fixed normalization bug in the "Cum" column of xy_rdf (Alan)

2012-07-18    <tromo@spade.biophysics.rochester.edu>

	* Changed how Atom::bondsbit is handled.  If a file is read that
	has connectivity (or should have connectivity), then all atoms in
	the group will have the bondsbit set.  Atoms that do not have
	anything bound to them will have valid connectivity and
	Atom::getBonds() will return an empty vector<int>.

2012-07-10    <tromo@spade.biophysics.rochester.edu>

	* Removed the --center option in aligner (it's not needed and can
	cause an unintended translation in the output)

2012-06-15    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in water-inside (and also water-hist) affecting the
	radius filter and causing a segfault.

2012-05-25    <tromo@spade.biophysics.rochester.edu>

	* Added tool for tracking intra- and inter-molecular hydrogen
	bonds for a trajectory (hcontacts).
	* Added tool for computing occupancies from hcontacts and hmatrix
	output (hoccupancies.pl)
	* Added basic atom equality in Python

2012-05-08    <tromo@spade.biophysics.rochester.edu>

	* Added a check in AtomicGroup::superposition() to verify that the
	correlation matrix is non-singular.  This happens if too few atoms
	are selected for an alignment and the solution becomes
	indeterminate.  The threshold for singular values being zero is
	defined in AtomicGroup::superposition_zero_singular_value.

2012-05-01    <tromo@spade.biophysics.rochester.edu>

	* Changed helix_kink to always report the smallest angle between
	the two principal axes.

2012-04-27    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in rmsd2ref where warnings would always be issued
	about target selection regardless of whether a target was
	specified.
	* Fixed bug in PDB output affecting remarks records that contain
	newlines.  Any newline in a remark record string is now removed
	upon output.

2012-04-26    <tromo@spade.biophysics.rochester.edu>

	* Added addition and subtraction with constants for Coords
	* Added AtomicGroup::copyCoordinatesFrom() which can now take an
	optional offset into the current group and a number of coordinates
	to copy.
	* Deprecated AtomicGroup::copyCoordinates()
	* Fixed bug in TRR where updateGroupCoords() would possibly fail
	if updating a subset.
	* Fixed bug in TRR where checking natoms() could return erroneous
	sizes after instantiating the object, but before any frames had
	been explicitly read.

2012-04-23    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::within() documentation that
	incorrectly stated that for A.within(X, B), what was returned was
	atoms from B when in fact it was atoms from A, i.e. atoms in A
	that are within X angstroms of any atom in B.
	* Changed the algorithm in AtomicGroup::within() to support
	periodicity and to be much faster.

2012-04-20    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in aligner when alignment and transformation subsets
	were not the same and auto-centering was turned on.

2012-04-18    <tromo@spade.biophysics.rochester.edu>

	* Changed utils.hpp, moving random number code to utils_random,
	and structural-related code into utils_structural.  loos.hpp now
	includes all utils files, so tools do not require any changes.

2012-04-09    <tromo@spade.biophysics.rochester.edu>

	* Changed convert2pdb to use the options framework
	* Fixed bug in blurrogram.pl where it incorrectly invoked trajinfo
	* Deprecated model2matlab (use traj2matlab instead)

2012-04-05    <tromo@spade.biophysics.rochester.edu>

	* Changed rotamer to automatically split the selections into
	residues.  This also fixes a potential bug where, if a selection
	encompasses multiple residues, the first atom with a matching name
	was used to compute the torsion.
	* Deprecated svdcolmap (see eigenflucc)
	* Removed flucc2b
	* Changed traj2pdb so that it now uses a printf-style output name template

2012-04-02    <alan@membrane.urmc.rochester.edu>
   * Added cross-dist tool to compute distribution of crossing angles
   and torsions for chains.

2012-03-30    <tromo@spade.biophysics.rochester.edu>

	* Changed parseRange<> implementation.  Added validation of input
	ranges.  Counting down now requires a negative step size (like
	octave).  Counting down to 0 with an unsigned type now works
	correctly.

2012-03-29    <tromo@spade.biophysics.rochester.edu>

	* Deprecated dumpmol

2012-03-27 Alan Grossfield <alan@membrane.urmc.rochester.edu>

	* Added --sel1-spans and --sel2-spans to xy_rdf, to handle the
	case where a selection should be treated as appearing in both
	leaflets (eg a transmembrane helix)

2012-03-22  Tod Romo  <tromo@gorgoneion>

	* Removed octavex script (unused by recent versions of LOOS)
	* Fixed bug in averager regarding the default selection to average over

2012-03-16    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in subsetter when using a subset of the model.  The
	connectivity written out is incorrect.

2012-03-08    <alan@membrane.biophysics.rochester.edu>

	* Added potential_profile.py to Tools/.  This tool uses output from
	density-dist run in "charge" mode to compute the electrostatic potential
	profile.
	* Added beta version of python interface

2012-03-08    <tromo@spade.biophysics.rochester.edu>

	* Changed density-dist to restore original behavior.  The first
	selection is always "all".  Zero or more selections are permitted
	on the command line.

2012-03-06    <tromo@spade.biophysics.rochester.edu>

	* Changed eye() and submatrix() to be templated functions
	(i.e. they work with both RealMatrix and DoubleMatrix).
	* Note the deye() function is now deprecated and will be removed
	after the next release.

2012-01-31    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in molshape where tool-specific command-line options
	were ignored.
	* Changed rmsds (largely rewritten) to compare either a single
	trajectory with itself or two different trajectories.  The
	iteratively-aligned mode has been removed and every frame is
	always aligned with every other frame.

2012-01-17    <tromo@spade.biophysics.rochester.edu>

	* Changed factory functions to allow specifying a file type in
	addition to divining it from the filename extension.  Note that
	for createSystem(), internally a shared pointer to an AtomicGroup
	is created, and then dereferenced for the returned AtomicGroup
	(i.e. there's a copy going on behind the scenes, although this
	should be a fast [and infrequent] operation)

2012-01-16    <tromo@spade.biophysics.rochester.edu>

	* Added fullhelp to water-hist

2012-01-13    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug involving density grid metadata when the tool options
	included a newline (as can happen in selection strings).

2012-01-04    <alan@membrane.urmc.rochester.edu>

    * Fixed a bug in merge-traj that sometimes caused it to not merge
	all frames (found by Josh Horn)

2012-01-04    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in porcupine that prevented it from running (found by
	Dejun Lin)

2011-12-22    <alan@membrane.urmc.rochester.edu>

	* Changed AtomicGroup::radius() to accept an optional bool
	argument.  If true, radius will compute the radius of the group
	relative to the first atom rather than the centroid.  This is to
	address a rare problem with reimaging.  The default is to preserve
	the orginal behavior (i.e. radius is relative to the centroid)

2011-12-21    <tromo@spade.biophysics.rochester.edu>

	* Added dox for writeAsciiMatrix()

2011-12-20    <tromo@spade.biophysics.rochester.edu>

	* Changed subsetter so that connectivity is preserved when
	extracting a subset

2011-12-19    <tromo@spade.biophysics.rochester.edu>

	* Fixed AtomicGroup::splitByResidue() to preserve the periodic box
	information in the split residues

2011-12-15    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::splitByMolecule() to be const.  A copy of
	the AtomicGroup is made and then used to split into molecules.

2011-12-12    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::maxResid() that gave erroneous results
	(found by Ben Reynwar).

2011-12-09    <tromo@spade.biophysics.rochester.edu>

	* Added residue-contact-map tool which generates a "heat map" of
	contacts between residues over a trajectory.

2011-12-07    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in decorr_time where the time-range wasn't properly
	handled and it would not generate output

2011-11-30    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in XTC::updateGroupCoords() when passed a group
	smaller than the trajectory frame (thanks to Ben Reynwar for
	catching this one!)
	* Fixed bug in subsetter where --verbose was ignored

2011-11-22  Tod Romo  <tromo@gorgoneion>

	* Fixed bug in PDB reading code affected DOS formatted PDB files
	with CONECT records causing them not to load.

2011-11-17  Tod Romo  <tromo@gorgoneion>

	* Changed header file CPP guards to have "LOOS_" as a prefix
	(e.g. LOOS_ATOM_HPP rather than ATOM_HPP) to prevent potential
	collisions with user code.
	* Changed pdb reader to significantly speed up reading large PDBs
	with CONECT records.

2011-11-10    <tromo@spade.biophysics.rochester.edu>

	* Changed header output in tools so that it says "frame" rather
	than "t".

2011-11-02    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::splitByMolecule() so that missing bonds do
	not throw an error.  Instead, they are ignored.
	* Changed trajinfo to warn if there is a mismatch between the
	system size and the trajectory size
	* Changed xy_rdf to emit 0's rather than NaN's if there are
	missing atoms in a leaflet.

2011-10-17    <tromo@spade.biophysics.rochester.edu>

	* Changed default spring constant for exponential springs to -6
	(from -2).

2011-09-29    <tromo@spade.biophysics.rochester.edu>

	* Changed XForm::rotate() so that the passed axis vector is
	normalized internally.

2011-09-15    <tromo@spade.biophysics.rochester.edu>

	* Added Atom::atomType() to support tinkerXYZ atom type info

	* Fixed bug in density-dist where the default window was not 0,
	causing the time-series to always be written.

2011-09-14    <tromo@spade.biophysics.rochester.edu>

	* Added check in rdf-based tools to ensure either the model or the
	trajectory has periodic box information.
	* Added --any mode to hcorrelations.  This computes the
	time-correlation for whether this is any hydrogen bound, rather
	than a specific hydrogen.

2011-09-08 <alan>
    * Added new option to merge-trj (selection-is-split) to handle the case
	where the centering selection is split across an image boundary more
	robustly.  This is basically the same algorithm that's in recenter-trj

2011-08-29    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in effsize.pl where the seed value was not correctly
	used.

2011-08-25    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in order_params where NOT specifying the ba_last
	caused it to be improperly set.

2011-08-22    <tromo@spade.biophysics.rochester.edu>

	* Fixed const-ness of AtomicGroup::findById() and
	AtomicGroup::groupFromID()

2011-08-04    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in effsize.pl that used incorrect options to trajinfo
	to determine trajectory size.

2011-08-03    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in gridslice that transposed output matrix (or crashed
	the tool)
	* Fixed bugs in pick_blob that caused the tool to not accept
	model files or blob id's.
	* Fixed bug in avgconv that would fill up memory if the number of
	frames in the trajectory was too small.

2011-08-02    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in blobid that incorrectly parsed the command-line
	* Fixed bug in contained that incorrectly parsed the command-line

2011-07-29    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in water-hist that caused a corrupted header in the
	output grid.
	* Changed vectorAsStringWithCommas() to suppress the trailing
	comma
	* Added a --brange option to water-hist to take the bulk estimate
	from a slice in Z
	* Fixed bug in older versions of BOOST where similar long option
	names would be confused and the tool would not run with a
	"multiple occurences" error

2011-07-28    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in xy_rdf that caused the by-molecule split-mode to
	not work correctly if the selection "pruned" any bonds.
	* Fixed bug in center-molecule where the --center and --center_xy
	options could not be used (this appears to relate to certain
	versions of BOOST Options).
	* Fixed bug in density-dist-windowed and rgyr that caused the
	first frame of the trajectory to be skipped if no explicit skip
	was specified.

2011-07-27    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in rgyr that did not write out correct bin coords when
	hist_min != 0
	* Changed rmsds so non-verbose mode does not give progress updates
	* Changed xy_rdf to not require --split-mode (correctly has
	default).  All RDF tools now list split-mode options in help.

2011-07-26    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in rdf tool where command-line options were not
	correctly handled.
	* Fixed bug in rdf and atomic-rdf tool for very large trajectories
	that resulted in negative values.

2011-07-08    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in Trajectory class where the following caused a
	duplicate first-frame to be read:
	   traj->readFrame(0);   // Reads first frame
	   traj->readFrame();    // Should read second frame
	The second line would instead return the first frame again.

2011-07-01    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::append() and AtomicGroup::remove()
	functions to return a reference to the AtomicGroup operated on.
	This means you can now chain operations,
	i.e. foo.add().add().add()

2011-06-21    <tromo@spade.biophysics.rochester.edu>
	* Added cosine content tools to the Convergence Package
	* Fixed a minor bug with ramachandran where structures containing
	multiple chains were not handled correctly at the chain terminii
	(i.e. ramachandran would treat the structure as one contiguous
	chain with only two terminii).
	* Added a transpose() function for matrices (this is NOT an
	in-place transposition, so beware of memory constraints)
	* Added support for using different selections for the trajectory
	and the reference structure in rmsd2ref
	* Fixed bug in avgconv where using the default block-sizes would
	cause a segfault.
	* Changed the output metadata header (from invocationHeader()) to
	include the current working directory, if available.

2011-05-26    <tromo@spade.biophysics.rochester.edu>

	* MAJOR reorganization of how LOOS is structured.  Tool suites are
	now "packages" and contained within the "Packages" directory.  The
	Tools directory now only contains the "core" set of LOOS tools.
	* Added an OptionsFramework and AggregateOptions class to provide
	a more consistent set of options across most tools and packages.
	See the class documentation for OptionsFramework for more details.
	***IMPORTANT NOTE***  This means that command-line options for
	most tools have changed.  In particular, many of the single-letter
	shortcut options have changed or been removed.
	* Added a Packages/User directory that contains "template"
	programs for common tasks.  To write a new tool, copy the template
	that is closest to what you want to do, then edit the regions
	marked by "***EDIT***" comments.
	* Added several general utility functions include:
	loadStructureWithCoords(), assignTrajectoryFrames(), and
	vectorAsStringWithCommas<T>().
	* Added a "Density Tools" package.  This is used primarily for
	water visualization and analysis.

2011-05-18    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug where charmm.hpp was not installed

2011-05-15  Tod Romo  <tromo@Gorgoneion.local>

	* Fixed bug in eigenflucc tool where the zero-modes would be
	included when requesting "all" modes.
	* Added support for hybrid-36 encoding of atomids and resids in
	PSF files.

2011-04-18    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in GRO file handling where the periodic box was
	not converted into Angstroms.

2011-03-21    <tromo@spade.biophysics.rochester.edu>

	* Changed library search order to fix a problem that cropped up on
	some Fedora 14 installs.
	* Fixed bug in avgconv that caused a core dump when using
	automatic block-sizes.

2011-02-15    <alan@membrane>
	* Added option to Tools/merge-traj to fix by molecule, so that
	trajectories that have molecules broken across the periodic boundary (eg
	gromacs output) come out looking clean
2011-02-11    <alan@membrane>
	* Added a simply xy-only option to recenter-trj
	* Modified recenter-trj to be more robust (although half as fast), so that
	it does the right thing even if the centering selection is split
	across the periodic image
2011-02-02    <alan@membrane>
	* Modified Tools/density-dist to fold in the functionality from
	density-dist-windowed.  The latter is marked deprecated.  Note: to get
	around a design flaw in boost program options, you have to manually
	specify --minz and --maxz (because program options tries to grab
	negative numbers as options).
2011-02-02    <tromo@spade>
	* Modified Tools/density-dist to use boost program options, and added a
	  symmetrize flag to make the density symmetric about the membrane center.
	  This assumes the trajectory has already been aligned with the
	  membrane center at z=0 for each frame.  This can easily be accomplished
	  when you merge and downsample your trajectories using merge-traj, which
	  has an option to allow you to center a specific selection (eg your
	  lipids).
2011-01-28    <alan@membrane.urmc.rochester.edu>

	* Modified Tools/order_params.  Now uses boost program options (command
	line is similar, but not precisely backward compatible), has the option to
	use y or x as the direction of the magnetic field, and has the option to
	dump out the timeseries of the order parameters.  Specifically, the last
	quantity is computes the average instantaneous order parameter for each
	carbon position at each time point.  The "+/-" column in the output is the
	stdev of these timeseries, which is _not_ a good measure of the
	statistical uncertainty.  To get that, one should use block averaging on
	the time series.  This is also an option -- in principle, you read off the
	plateau value from the block averaging plot, but since this plateau is
	noisy, I make you specify a range of block sizes over which to average
	(the defaults are 2 blocks to 5 blocks, but you really should run the
	program twice, and the first time look at the block averaging plots to see
	where the block standard error converges.

2011-01-14    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::renumberWithBonds() that would blindly
	try to renumber bonds for atoms that had no bonds.

2010-12-20    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::splitByMolecule() so that it should be 20x-30x faster.
	* Changed AtomicGroup::sort() to not trust the sorted status and to ALWAYS sort.

2010-12-20    <alan@membrane>
	* Changes Tools/xy_rdf.  Now able to split by molecule, residue, or
	  segment.  Also, merged the functionality of xy_rdf_timeseries into
	  xy_rdf.  xy_rdf_timeseries is now deprecated, and will be deleted
	  before the next release.

2010-12-17    <alan@membrane>
	* Changed Tools/rdf to be able to split by molecule, residue, or segment.
	  Now uses boost program options, so the command line is not backward
	  compatible.  TODO: add a fullhelp option


2010-11-30    <tromo@spade.biophysics.rochester.edu>

	* Changed covarianceOverlap() routine to use BLAS and faster
	matrix operations for significant performance boost.
	* Added z-scored covariance overlap (zCovarianceOverlap()) along
	with support for this in the coverlap tool.

2010-11-22    <tromo@spade.biophysics.rochester.edu>

	* Fixed [another] compiler issue in AtomicGroup for older g++
	compilers
	* Changed INSTALL to include latest debian, OpenSUSE, Fedora,
	Ubuntu, and cygwin (windows).
	* Added test results for cygwin

2010-10-25 Tod Romo <tromo@gorgoneion>
	* Fixed typename issue in AtomicGroup that caused some g++
	compilers to complain.
	* Changed TimeSeries tests to reflect code changes
	* Fixed bug in big-svd where the RSVs were not normalized

2010-10-15 Tod Romo <tromo@gorgoneion>
	* Fixed bug in svd tool for MacOS (more precisely, it's a bug in
	vecLib affecting single-precision SVDs and macs only)

2010-10-08    <tromo@spade.biophysics.rochester.edu>

	* Added convergence tools (beta releases only)
	* Deprecated features from aligner removed
	* Added ability to use aligner to align trajectory to a reference
	structure.
	* Added block averaging tool (Alan).
	* Fixed bug when computing variance in TimeSeries (Alan)

2010-09-16 Tod Romo <tromo@gorgoneion>
	* Added kurskew tool to calculate kurtosis and skewness for RSVs
	* Changed phase-pdb...several improvements, see --help for more
	details.
	* Changed averager so that bonds are pruned (rather than cleared)
	when subsetting.
	* Added N-M Simplex optimizer
	* Changed MDuple to Math::Range for matrix I/O
	* Added submatrix extraction and column-vector normalization
	routines.
	* Changed the default number of modes to use for the subspace
	overlap in the coverlap tool.

2010-09-16 Tod Romo <tromo@gorgoneion>
	* Changed randomRNG() to use uint rather than long for seed and
	also to return the used seed value (for autogenerated seeds)

2010-09-14 Alan <alan@membrane.urmc.rochester.edu>
	* Added ability to compute order parameters with respect to x and
	y axes.



2010-09-10  Tod Romo  <tromo@gorgoneion>

	* Fixed bug affecting calling Trajectory::rewind() on Tinker ARC files

2010-08-23    <tromo@spade.biophysics.rochester.edu>

	* Changed the Elastic Networking Tools.  This is a total revamp of
	the ENM code to turn it into a useful library as well as a suite
	of tools.  More information can be found in the Doxygen
	documentation for namespace ENM or in the ENM module.
	* Changed AtomicGroup::findById() so that it no longer implicitly
	sorts atoms in the contained AtomicGroup.  If the group has been
	explicitly sorted (AtomicGroup::sort()), then the old binary
	search will be used.  Otherwise, a linear search will be used.
	* Added AtomicGroup::pruneBonds() to remove bonds to non-existant
	atoms (for subsetted AtomicGroups).



2010-07-27    <tromo@spade.biophysics.rochester.edu>

	* Added a tool for perturbing structures randomly
	* Added a new tool for computing ENM fluctuations and mapping them
	onto a structure (eigenflucc).
	* Deprecated the flucc2b tool
	* Fixed minor issues in h-bonding tools and improved help
	messages.
	* Added covariance overlap tool
	* Fixed issue in AtomicGroup::superposition where failures in the
	alignment code would not get caught.
	* Changed svd tool to use doubles rather than floats.  This is in
	part to address a bug in MacOS 10.6 that causes the SVD to fail
	without flagging it as an error.  This only seemed to occur in
	certain rare circumstances (e.g. multiple, very similar
	trajectories).  Symptoms of the problem include non-orthogonal
	LSVs and no 6 zero-svals.
	* Added big-svd tool to compute the SVD of large systems.  It uses
	floats rather than doubles.  More importantly, if A is m x n, then
	the RSV matrix V would be n x n, which can be huge.  Here, only
	the first m columns of V are computed.
	* Fixed bug in writing of internally transposed matrices.
	* Deprecated the use of the transpose flag in ACSII matrices
	(i.e. in the file format)
	* Fixed bug in the Matrix code that affected large matrices
	(i.e. where m * n >= 2^32)
	* Fixed bug in traj2matlab where the wrong subset of atoms was
	used to create the matrix.


2010-07-06    <tromo@spade.biophysics.rochester.edu>

	* Added support for some STL algorithms with TimeSeries
	(i.e. begin, end, and push_back)
	* Added a set of hydrogen-bonding analysis tools in
	Tools/HydrogenBonds

2010-06-22    <tromo@spade.biophysics.rochester.edu>

	* Added support for accesing the shared periodic box contained in
	an AtomicGroup.


2010-06-21    <alan@membrane.biophysics.rochester.edu>
	* Changed order_params to handle both 1- and 3-residue per lipid
	  formats. Verified works for new and old CHARMM parameters.

2010-06-11    <tromo@spade.biophysics.rochester.edu>

	* Fixed library link order for linux.  Will now correctly link
	against ATLAS first, then LAPACK...

2010-06-02    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::perturbCoords() where the directions
	picked were not actually uniform on the sphere.

2010-04-22    <tromo@spade.biophysics.rochester.edu>

	* Changed build system to handle installing pre-build docs
	better.  Note that the existing installed docs dir will be
	removed, then the pre-built will be copied into its place.

2010-04-07    <tromo@spade.biophysics.rochester.edu>

	* Changed SuperBlock in the ENM tools to catch and truncate
	negative spring constants

2010-03-24    <tromo@spade.biophysics.rochester.edu>

	* Changed VSA/ANM to accept user-defined HCA constants
	* Fixed bug in parser code where Debian systems didn't have EOF
	already defined.
	* Changed linux numerical code to use blas rather than cblas
	* Fixed SConstruct to make support for Ubuntu/SUSE better
	* Changed AtomicGroup::rmsd() to take a constant arg (i.e. it no
	longer implicitly sorts the corresponding AtomicGroup objects)
	* Changed porcupine tool to have fixed-length tips rather than
	proportional ones.
	* Changed porcupine tool to make tagging of altered atoms via
	altLoc optional.

2010-03-02    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in DescendingSort sort predicate causing it to sort
	ascending.

2010-02-20  Tod Romo  <tromo@gorgoneion-w>

	* Changed contact-time to filter target atoms so that only nearby
	atoms are considered in the all-to-all check.


2010-02-18    <tromo@spade.biophysics.rochester.edu>

	* Added center-molecule tool...a slightly more flexible tool for
	centering molecules than center-pdb
	* Added contact-time, a tool for computing the number of contacts
	between a "probe" selection and a set of "targets" over time, with
	various methods of normalizing the output.

2010-02-10  Tod Romo  <tromo@gorgoneion-w>

	* Changed PDB::fromAtomicGroup so that if the AtomicGroup has a
	periodic box, then the PDB's UnitCell is set to the same
	dimensions (with 90 degrees for all angles).  This will the be
	written out as a CRYST1 record.
	* Changed PDB::unitCell() so that the unitCell& it returns is a
	const.

2010-02-05    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in aligner that sometimes caused the target selection
	to not be correctly centered.  The frames were still aligned
	correctly, but the global center was not correctly applied.

2010-02-02    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in svd function that takes a vector of AtomicGroup's
	and when aligning is requested...the alignment transform is
	applied twice to each AtomicGroup.  No other svd calls were
	affected and no LOOS tools were affected by this.

2010-01-13    <tromo@spade.biophysics.rochester.edu>

	* Changed ENM code so that the Hessian construction is in its own
	module.
	* Fixed numerous problems in VSA code.  It now works correctly
	(i.e. gives mass-weighted eigenvectors).  It can also be run in a
	unit-mass mode.
	* Added support for various forms of weighting in the Hessian.

2009-12-28    <tromo@spade.biophysics.rochester.edu>

	* Added support for doctoring PDB files to include masses
	(i.e. new tools in ElasticNetworks)
	* Changed matrix code to support single or double precision
	matrices through overloading.
	* Changed permutation and overlap codes to be template-based, so
	will work with any Matrix form (though you cannot mix and match
	them).
	* Changed ENM tools to use double precision and high precision in
	ASCII output...

2009-12-07    <tromo@spade.biophysics.rochester.edu>

	* Changed DCDWriter substantially...  It no longer uses a
	StreamWrapper, but manages its own iostream*.  Optional flag to
	constructors control whether the iostream* is deleted on
	destruction or not.
	* Added ability to use DCDWriter to append to an existing DCD.
	* Added merge-dcd tool (alan)

2009-12-02    <alan@membrane.biophysics.rochester.edu>

	* Changed correl method in TimeSeries so normalization is now optional

2009-11-13    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in enmovie tool where bond connectivity was not
	cleared before writing the reference PDB.  The reference PDB is
	also renumbered to correctly match the output DCD.

2009-11-10    <tromo@spade.biophysics.rochester.edu>

	* Upgrades to rebond tool.  See tool help for details.
	* Fixed bug in svd tool requiring a valid alignment selection even
	if no aligning was done.
	* Fixed bug in extractCoords() causing it to fail for any
	invocation
	* Added covariance and subspace overlap functions

2009-11-05    <tromo@spade.biophysics.rochester.edu>

	* Changed anm and gnm tools to not write out the right singular
	vectors (as it's unlikely these would actually be needed)

2009-11-04    <tromo@spade.biophysics.rochester.edu>

	* Changed exposure so that it can now operate over a range of frames

	* Changed porcupine to use new-style command-line flags

	* Added a VSA (vibrational subsystem analysis) tool

	* Changed the enmovie tool to be a little more generic and
	useful.  See the help information regarding how its invocation has
	changed.

	* Changed the output of the ENM tools...  For ENM results, the
	smallest non-zero eigenvalue corresponds to the lowest frequency
	motion.  These came at the end of the output from the ENM tools,
	which can cause confusion.  We therefore now sort the eigenpairs
	so that the smallest (i.e. lowest frequency) come first.  The zero
	modes are not stripped off.

	* Added a set of generic sorting functions that will sort a
	container and return a vector giving the indices that can be used
	to permute the container into the sorted order.  This is useful
	for doing things like sorting multiple containers based on the
	contents of one.

	* Added a suite of overloaded operators and support functions for
	operations on matrices.  Note: these are for quick-n-dirty tool
	development.  If you want performance or efficiency, you're
	strongly encouraged to look for a better method for implementing
	your linear algebra code.

	* Added alignto tool that aligns a trajectory to a given reference
	structure.


2009-10-20    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in subsetter that caused reimaging to ONLY be
	performed if centering was turned on.

	* Fixed bug in subsetter that caused bonds to not be cleared when
	subsetting...


	* Changed exposure to default to reimaging distances.  Also
	changed how the flag is set.  "-R 1" turns reimaging on (the
	default) and "-R 0" turns it off.

2009-10-10  Tod Romo  <tromo@gorgoneion>

	* Changed AtomicGroup::principalAxis() to automatically scale the
	returned eigenvalues by the number of atoms used in the
	calculation.  Previously, the UNSCALED eigenvalues were returned.

2009-10-09    <tromo@spade.biophysics.rochester.edu>

	* Added AtomicGroup::splitByName() which returns a std::map
	mapping unique atom names to an AtomicGroup containing only those
	atoms (by Alan)

	* Added support for a LOOS family of exceptions in exception.hpp.
	LOOS will gradually migrate to using LOOSError derived exceptions
	for errors that are specific to LOOS...

	* Fixed bug where readFrame() incorrectly returned a false on the
	first frame of an Amber restart file.

2009-10-06    <tromo@spade.biophysics.rochester.edu>

	* Fixed a bug where segname was not properly handled as a synonym
	for segid...

2009-09-23    <tromo@spade.biophysics.rochester.edu>

	* Fixed a bug in the CCPDB and PDBTraj classes when using
	updateGroupCoords with an AtomicGroup that is a subset of the
	model that corresponds to the trajectory.  Previously,
	updateGroupCoords simply copies coordinates directly into the
	passed AtomicGroup.  If the AtomicGroup is a subset, however, this
	would result in incorrect coordinates.  This has been fixed so
	that if the passed AtomicGroup is the same size as the one used to
	create the Trajectory, then the coordinates are copied straight as
	before.  However, if the passed AtomicGroup is a different size,
	then the atom id's are assumed to be indices (+1) into the
	trajectory frame.

2009-09-21    <tromo@spade.biophysics.rochester.edu>

	* Fixed install target--was missing trr.hpp

2009-09-03  Tod Romo  <tromo@gorgoneion>

	* Fixed bug in DCD::updateGroupCoords where the upper-bounds check
	on atomid's was incorrect.
	* Fixed problem with spurious complete rebuilds of LOOS by SCons
	* Changed rmsds so it can work with a subset of frames from the
	trajectory
	* Fixed bug in box size reported by bounding tool
	* Updates to several tools to be consistent with contemporary LOOS
	style
	* SVD now only writes out the non-zero RSV's (i.e. those that have
	non-zero singular values).
	* Added a "not" operator to the selection language.  This can be
	used in lieu of the '!' character, so you don't have to worry
	about shells munging it.
	* Changed the parseAsString<> family to explicitly initialize
	return values to 0 and return this on an error, rather than rely
	on the default type initialization.
	* Added hybrid-36 support for PDBs.  See
	http://cci.lbl.gov/hybrid_36 for more details.  LOOS internally
	translates the hybrid-36 codes into integers.  LOOS does not yet
	support the 2-char chainId.
	* Fixed bug affecting writeAsciiMatrix() when using a dense matrix
	and only writing out a subset of the matrix.  The size of the
	sub-matrix encoded in the output metadata was incorrect.

2009-08-10    <tromo@spade.biophysics.rochester.edu>

	* Added support for Gromacs TRR files.  The reader can handle
	either double or single precision TRR files, but internally, all
	data is converted into doubles (or GCoords).

2009-08-04    <tromo@spade.biophysics.rochester.edu>

	* Added safety check in DCDWriter that prevents modifying the
	header (such as adding new title lines to it) once it has been
	written to the trajectory.

2009-08-03  Tod Romo  <tromo@gorgoneion-w>

	* Changed the Fmt formatter will now truncate output so that it is
	never greater than the requested field-width.
	* Added fixedSizeFormat() to aid creating text fields for output
	that will be truncated to their max size.
	* Changed PDB and GRO reading code so if there are >= 100,000
	atoms read in, they will be renumbered to be monotonically
	increasing.
	* Changed PDB output code to have fixed field-widths (i.e. maximum
	field widths).  LOOS now adhears closer to the PDB v2.2 spec with
	the exception that residue names are 4-characters long.

2009-07-31    <tromo@spade.biophysics.rochester.edu>

	* Added utility functions for extracting type-specific records
	from a string (loos::parseStringAs<>()).  This is useful if you
	need to extract columns from a line of input, for example.
	* Changed the underlying stream type in all trajectories from
	fstream to iostream.  This should not break anything unless you've
	written your own Trajectory subclass.  This really should have
	been an iostream in the first place so that it doesn't matter what
	kind of stream you're passing to the Trajectory classes (i.e. it
	could just as easily be a stringstream).
	* Fixed a couple of trajectory subclasses (such as AmberTraj) that
	didn't provide a constructor with a stream.
	* Changed the Trajectory subclasses to move the implementation
	functions to be private.  These really should not have been
	exposed in the first place.  This does have the potential to break
	code that was relying on the internals of the subclasses.
	* Added an XDR class for simulating the rpc/xdr library, but it's
	templated so it has a [hopefully] easier API and it works with C++
	streams.
	* Added support for Gromacs .gro and .xtc (single-precision only)
	files.  Note:  coordinates are transformed into Angstroms!

2009-07-08    <tromo@spade.biophysics.rochester.edu>

	* Added some new bits to Atoms that can be set/queried by the
	programmer...  flagbit, and usr1bit through usr3bit.

2009-07-07    <tromo@spade.biophysics.rochester.edu>

	* Added support for testing atom equality using the binary
	predicates: AtomEquals and AtomCoordsEquals
	* Added support for testing whether an AtomicGroup contains an
	atom or another group via the AtomicGroup::contains() member
	function.  This function can take an atom-comparison policy, or
	use the default AtomEquals (which just compares names, ids, and
	segids)
	* Changed AtomicGroup::intersect() to now use an atom comparison
	policy rather than comparing the pAtom addresses.
	* Readded ubuntu-specific check.


2009-07-01    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::findBonds().  Changed default distance
	threshold to 1.25 \AA.
	* Added support for reimaging in subsetter
	* Added support for multiple verbosity levels in subsetter
	* Changed PDB output to now prune the connectivity output if atoms
	are missing...this means you do not nead to clearBonds() prior to
	writing out a PDB.

2009-06-29    <tromo@spade.biophysics.rochester.edu>

	* Added AtomicGroup::findBonds() to perform a distance-based
	search...

2009-06-22    <tromo@spade.biophysics.rochester.edu>

	* Changed subsetter to permit numerical sorting of the input
	trajectory files.  The sort key can be extracted by using either a
	scanf-style format or a regular expression.
	* Fixed bug in subsetter where verbosity was always turned on.
	* Changed the centroid reporting in trajinfo to report the
	centroid of a selection.
	* Changed the size of the test PDB file so it's much more
	reasonably sized.
	* Changed test code to reflect changes in PDB test file, including
	updating of expected test output.

2009-06-18    <tromo@spade.biophysics.rochester.edu>

	* Changed the specs for classes derived from the Trajectory
	class.  All derived classes must now ensure that the first frame
	of the trajectory is read in and cached as part of their
	initialization.  In order to keep the readFrame() iterator from
	skipping the first frame, the derived classes must also set the
	cached_first flag.
	* Added support for Tinker format in the factory functions.
	* Added centerOfElectrons() method to AtomicGroup (by Alan)
	* Fixed bug in subsetter where out-of-range frame indices caused a
	seg-fault.
	* Changed bounding to report periodic box size (not just the
	extents).
	* Added renum-pdb tool to renumber a model
	* Added an AtomNameSelector() that will select an atom with the
	passed name.  AtomNameSelector("CA") should be used instead of
	CAlphaSelector(), which is now deprecated.
	* Removed ubuntu-specific build check, given the new build
	protocol for ubuntu (see the Doxygen docs for more information)


2009-05-15    <tromo@spade.biophysics.rochester.edu>

	* Added support for Amber RST and INPCRD files as a single-frame
	trajectory.  This is handled transparently by createTrajectory()
	* Changed the Trajectory interface slightly...  Seeking and
	rewinding now use non-virtual inheritance so that conditions can
	be imposed on the function invocation (namely to invalidate the
	cached_first flag).  This change SHOULD be transparent

2009-05-13    <tromo@spade.biophysics.rochester.edu>
	* Fixed problem with averager where it was caching all frames of
	the trajectory.  It will now scan through the trajectory so it
	wont swap with large files...
	* Fixed some issues with the SConstruct
	* Added a revision tag to the build/tool output when building from
	the trunk.
	* Added a check for building with ubuntu because of a potential
	problem with atlas not linking with gfortran
	* Added AtomicGroup::splitByResidue()
	* Added tool to calculate ramachandran plots for proteins and RNA


2009-04-03    <tromo@spade.biophysics.rochester.edu>
	* Fixed bug in averager that caused it NOT to respect the range of
	trajectory frames given on the command-line

2009-03-20    <tromo@spade.biophysics.rochester.edu>
	* Added tool "drifter" to look at centroid drift
	* Added tool "porcupine" to generate porcupine models from SVD/ENM
	results.

2009-03-11    <tromo@spade.biophysics.rochester.edu>
	* Added a number of support/utility functions to read a whole
	trajectory in, to align/average over specific frames in a
	trajectory, and an SVD function that is a front-end to
	Atlas/Accelerate.

2009-03-09    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in rmsds that caused incorrect average rmsd calculation

2009-02-24    <tromo@spade.biophysics.rochester.edu>

	* Added a set of classes for providing flexible progress updates
	to the user.  See the Doxygen docs for the ProgressCounter class
	for more information.  See Tools/rmsds.cpp for an example of how
	to use the new classes.
	* Removed BOOST_FOREACH usage.  This solves a compatability issue
	with older versions of BOOST.

2009-02-20    <tromo@gorgoneion-w>

	* Added rotamer tool to calculate chi-1, chi-2 torsion angles over
	time...
	* Added Elastic Network Model tools (ANM/GNM)
	* Added rmsfit tool to superimpose two structures
	* rmsds tool now reports simple statistics for the matrices it
	constructs
	* Added install target for SCons...
	* Added support for building a shared-library version of LOOS


2009-02-17    <tromo@spade.biophysics.rochester.edu>

	* Fixed potential issue with histogram size/bounds for rdf
	tools...

2009-02-16    <tromo@gorgoneion>

	* Fixed bug in aligner when centering the trajectory and when
	using different alignment and transformation subsets...

2009-02-09    <tromo@spade.biophysics.rochester.edu>

	* Added profile=1 build option for inserting profiling flags
	* Added more sensible error message from the auto-file-type
	divination code in the factory functions.
	* Changed subsetter so that the centering selection is applied to
	the subset rather than the model...it doesn't make much sense to
	center on something that's not in the output...

2009-02-06    <tromo@spade.biophysics.rochester.edu>

	* Added box override/setting to subsetter
	* Fixed problem with DCDWriter not writing out rectangular angles
	for unit cells by default.
	* Added more diagnostics to dcdinfo
	* Fixed bug in several tools that could cause an error when
	using a PSF for the model and applying a selection to it.
	* Added verification of the number of frames in a trajectory with
	trajinfo.
	* Added optional centroid reporting for trajinfo
	* Added improved error-checking when using
	loos::averageStructure().  This catches cases where a trajectory
	header and the physical trajectory have differing number of
	frames.
	* Added generic byte-swapping templated function to utils.hpp


2009-02-05    <tromo@spade.biophysics.rochester.edu>

	* Added tool to concatenate atoms together from a trajectory into
	a single PDB (for visualizing distributions of atoms over time)
	* Added ability to give a selection (subset) in frame2pdb
	* Added trajinfo tool to return information about generic
	trajectories
	* Added blurrogram.pl, a PERL program for automatically generating
	"blurrograms" suitable for visualizing in Pymol
	* Changed the svd tool to always write out an average structure
	* Changed the way LOOS parses range lists so it can now take a
	vector of strings representing ranges and parse all of them
	together.  A non-templated parseRangeList() is still retained for
	legacy code.
	* Changed subsetter so that it can now accept a list of arbirary
	ranges of frames to extract or, alternativey, a stride
	(step-size).  Subsetter can now also take multiple input
	trajectories and combine them (a la catdcd).  NOTE: this means the
	command-line syntax has changed...  You specify the output prefix
	FIRST, then the model, followed by the list of input trajectories.
	* Changed the DCD class so it now automatically detects non-native
	endian files and byte-swaps them on input.  Note that the
	DCDWriter will still only write out DCD's in the native format.
	* Fixed bug in rmsd2ref where the default alignment selection had
	a typo...
	* Added AtomicGroup::merge() function to find the union of two
	groups

2009-01-21    <alan@spade.biophysics.rochester.edu>

	* Added translate member function to AtomicGroup for convenience
	* Added recenter-trj tool to center trajectories
	* Changed DCDWriter to explicitly flush the output after every
	frame is written.

2009-01-19    <tromo@spade.biophysics.rochester.edu>

	* Added Atom::isBoundTo() to check whether or not one atom is
	bound to another
	* Fixed severe bug in reading Amber prmtop files that resulted in
	incorrect connectivity information.

2009-01-14    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in aligner where average structure was not correctly
	computed unless --rmsd was used
	* Added warning in svdcolmap when b's will go negative (and
	clamped them to 0)
	* Added the --terms command-line option back to svd

2009-01-02    <tromo@gorgoneion>

	* Fixed bug in build for MacOS X 10.5 (missing types)
	* Fixed bug in aligner where the PDB that's written out was not
	centered despite giving it the "--center" flag.

2008-12-22    <tromo@spade.biophysics.rochester.edu>

	* Changed the sparse matrix policy to use the GNU provided
	hash_map rather than the tr1::unordered_map if you're using
	gcc-4.0.1.  This is to work around an issue with the
	tr1::unordered_map implementation in gcc-4.0.1.

2008-12-18    <tromo@gorgoneion>

	* Fixed moderately severe bug when reading Amber trajectories by
	using readFrame(i) rather than readFrame().

2008-12-18    <tromo@spade.biophysics.rochester.edu>

	* Changed loos::createSystem() so that it will automatically look
	for a coordinate file if passed an Amber prmtop file.  If found,
	it will load those coordinates in.

2008-12-17    <tromo@spade.biophysics.rochester.edu>

	* Changed PDB output to allow for >= 100000 atoms/residues.  The
	catch is that this is a hack and will exclude altloc/chainid
	info.  However, the output PDBs are readable by pymol...

	* Matrix output now uses a formatting functor so you can adjust
	the output precision, or do whatever you want to with it...

	* Added tool for torsion timeseries (alan)

	* Changed AtomicGroup::splitByMolecule() to automatically sort
	each returned AtomicGroup...this solves a problem when use
	splitByMolecule() and then try to match the molecules with a DCD
	that's being written.




2008-12-12    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in AtomicGroup::PrincipalAxes() where coord array was
	deleted incorrectly...

2008-12-09    <tromo@spade.biophysics.rochester.edu>

	* Moved ALMOST everything into loos namespace, save for the
	lexer.
	* Fixed problem with SCons not regenerating lex/yacc output
	properly with the reparse=1 option
	* Removed top-level typdefs for uint/ulong (assuming they're part
	of the default set of typedefs)
	* Changed the SConstruct so that it tests for ulong/uint and
	defines appropriate flags for loos.  This is in case your system
	doesn't define one or the other.

2008-12-08    <tromo@spade.biophysics.rochester.edu>

	* Moved most of the internal classes/routines related to the
	parsing system into the loos::internal namespace.

2008-12-05    <tromo@gorgoneion-w>

	* Moved Matrix classes into loos::Math namespace

2008-12-05    <tromo@gorgoneion.urmc-sh.rochester.edu>

	* Added a new matrix class
	* Changed matrix IO to use the new templated function calls rather
	than the polymorphic writer/reader classes.
	* Removed injection of boost namespace into top-level by LOOS
	* Changed ensemble functions to take a pTraj (pointer to a
	trajectory) rather than a reference to a Trajectory object.
	* Added boost_program_options to the libs that must be linked
	against (and in the custom.py-proto)
	* Changed the svd tool to always write the map out, and the
	default naming scheme has been changed slightly (it will default
	to the base-name of the input trajectory unless you explicitly
	specify a prefix).


2008-12-04    <tromo@spade.biophysics.rochester.edu>

	* Changed Tools/aligner to write out the average structure as the
	PDB corresponding to the aligned DCD rather than just taking the
	first frame of the trajectory.

2008-11-25    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::splitByMolecule() to short-circuit if the
	group has no bond connectivity and return a vector with the entire
	group as its only member.
	* Changed Tools/reimage-by-molecule to be more generic in what
	types of files it will take.  Since you could now give it a file
	without connectivity, it detects this and warns the user...
	* Added subsetter tool to pull out a subset from a trajectory.

2008-11-21    <tromo@spade.biophysics.rochester.edu>

	* Changed BadConnectivity exception to inherit from runtime_error.
	Now accepts a string to stick into what().
	* Changed CONECT record reading to use fixed field widths
	* Changed PDB read code to keep track of what unknown records have
	been seen, so warnings are only emitted once for each unique
	unknown record.

2008-11-03    <alan@spade.biophysics.rochester.edu>

	* Fixed bug in crossing-waters tool where the entry side of the
	water was never set.

2008-10-31    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in Atom::clearPropertyBit() that caused it to
	incorrectly toggle other bits (and not always clear the bit it
	meant to).  This primarily affected the aligner tool.

2008-10-27    <tromo@spade.biophysics.rochester.edu>

	* Changed the internal has used in LOOS from SGI's hash_set to
	tr1::unordered_set.  This means that any code that relied on loos
	automatically included ext/hash_set will now need to either switch
	to using the tr1 equivalent, or explicitly include the hash_set
	header...

2008-10-23    <tromo@gorgoneion.urmc-sh.rochester.edu>

	* Added helix_kink tool
	* Fixed problem with PDB output with 10,000 residues or more
	* Fixed problem with automatically using loos namespace.  LOOS
	clients should either use fully qualified names for things in the
	loos namespace, or add a "using namespase loos" statement.
	* Added HeavySolventSelector to get non-hydrogen water atoms
	* Changed tools to use new convenience functions and factory
	functions.

2008-10-21    <tromo@spade.biophysics.rochester.edu>

	* Updated contacts to use any model filetype and any trajectory type.

2008-10-20    <tromo@spade.biophysics.rochester.edu>

	* Fixed MAJOR bug in DCDWriter that caused output periodic box
	sizes be set to (1,1,1).

2008-10-15    <tromo@spade.biophysics.rochester.edu>

	* Added AtomicGroup::clearBonds() to wipe out connectivity in a group.
	* Fixed problem in writing PDBs with bonds to missing atoms.
	Bonds are now deferenced prior to writing.  NOTE that this now
	means the PDB is no longer const when written and it will be sorted...

2008-10-14    <tromo@spade.biophysics.rochester.edu>

	* Fixed bug in width of CONECT record fields
	* Added check in PDB output to not append CONECT records if there
	are atomid's >99999 to prevent field overflow.
	* Added rudimentary support for extracting a Coord<T> from a stream.
	* Fixed bug in DCD trajectories affecting seeking frames
	* Fixed bug in DCD trajectories potentially affecting reading the
	number of frames in a trajectory that comes from NAMD.

2008-09-30    <tromo@spade.biophysics.rochester.edu>

	* Changed AtomicGroup::select() to be a const function
	* Added loos::selectAtoms() to parse a selection string and apply
	it to an AtomicGroup.

2008-09-19    <tromo@spade.biophysics.rochester.edu>

	* Added support for writing out CONECT records for PDBs
	* Fixed bug in Atom::checkProperty() that caused erroneous results

2008-09-08    <tromo@spade.biophysics.rochester.edu>

	* Added autocorrelation function to time-series class (Alan)

	* Added tool to compute probability dbn of radius of gyration (Alan)

	* Changed rmsd2avg tool to rmsd2ref tool since it now supports
	using an external reference structure.

	* Fixed another small bug in iterative alignment that affects
	groups that were not already close to their centroid.

2008-08-11    <tromo@spade.biophysics.rochester.edu>

	* Major reorganization of Trajectory class.  The class now uses a
	template pattern for reading frames in addition to being an
	interface.  This makes it even easier to extend.  See the Docs for
	more details.

	* Added CCPDB class for ConCatenated PDBs.  You can now treat
	these as a Trajectory.

	* Added PDBTraj class for handling non-contiguous PDBs as a
	trajectory.  Provide it with a printf-style format for generating
	frame names and a range of frame numbers to use, and it will allow
	you to access them as a Trajectory.

	* Added TinkerArc class for treating TinkerArc files (concatenated
	XYZ files) as a Trajectory.

	* Fixed problem with namespace collision with Boost in
	Tools/svd.cpp

	* Changed Atom defaults to initialize atomid and resid to 1,
	rather than -1.

2008-08-05    <tromo@spade.biophysics.rochester.edu>

	* Added tool to compute the RMSD between a selection and its
	average structure over the course of a trajectory.

2008-08-04    <tromo@spade.biophysics.rochester.edu>

	= BUGS =

	* Fixed problem with LOOS-wide typedefs affecting MacOS 10.5

	* Fixed minor bugin Atom class where setting coordinates using a
	GCoord ref doesn't correctly set the coords-bit,
	i.e. "foo.coords() = c;" will not register that the coords have
	been set.

	* Fixed minor bug in Tools/aligner where the first frame of the
	output DCD was not transformed.

	* Fixed moderate bug in AtomicGroup::splitByMolecule() where the
	PeriodicBox was not propagated beyond the first group split.

	* Fixed moderate bug in Tools/svdcolmap that affected certain
	instances of using atomid maps.

	* Fixed severe bug in loos::iterativeAlignment() where the
	returned vector<XForms> were incorrect.  The passed ensemble of
	AtomicGroups were correctly transformed, but anything that used
	the XForms would be affected to varying degrees.

	= NEW & IMPROVED =

	* Added improved self-tests for alignment routines.

	* Added support for log-scaling magnitudes in Tools/svdcolmap.

	* Added a new tool to reimage a DCD by molecule.

	* Added AtomicGroup::apply() to call a functor or function pointer
	on each Atom in an AtomicGroup.

	* Changed dcdwriter so that it no longer requires you to specify
	the number of frames that will be written.  Instead, it will
	automatically update the header with the current number of frames
	and then append the frame to the end of the trajectory.
